-- User table
CREATE TABLE "USER" (
    "ID"                   BIGSERIAL    NOT NULL,
    "UUID"                 UUID         NOT NULL,
    "USERNAME"             VARCHAR(255) NOT NULL,
    "PASSWORD"             VARCHAR(255),
    "EMAIL"                VARCHAR(255) NOT NULL,
    "PICTURE"              TEXT,
    "ACTIVE_CONFIG"        VARCHAR(255),
    "STRIPE_CUSTOMER_ID"   UUID,
    "SUBSCRIPTION_PLAN_ID" BIGINT,
    "DELETED"              BOOLEAN      NOT NULL,
    "CREATED_AT"           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    "UPDATED_AT"           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    "DELETED_AT"           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT "CH_USER"   CHECK (("ID" > 0)),
    CONSTRAINT "PK_USER"   PRIMARY KEY ("ID"),
    CONSTRAINT "UQ_USER__UUID" UNIQUE ("UUID"),
    CONSTRAINT "UQ_USER__USERNAME" UNIQUE ("USERNAME")
);

-- Role table
CREATE TABLE "ROLE" (
    "ID"   BIGSERIAL    NOT NULL,
    "NAME" VARCHAR(255) NOT NULL,
    CONSTRAINT "CH_ROLE" CHECK (("ID" > 0)),
    CONSTRAINT "PK_ROLE" PRIMARY KEY ("ID"),
    CONSTRAINT "UQ_ROLE__NAME" UNIQUE ("NAME")
);

-- User-Roles relationship table
CREATE TABLE "USER_ROLE" (
    "USER_ID" BIGINT NOT NULL,
    "ROLE_ID" BIGINT NOT NULL,
CONSTRAINT "PK_USER_ROLE" PRIMARY KEY ("USER_ID", "ROLE_ID"),
    CONSTRAINT "FK_USER_ROLE__USER_ID" FOREIGN KEY ("USER_ID") REFERENCES "USER" ("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_USER_ROLE__ROLE_ID" FOREIGN KEY ("ROLE_ID") REFERENCES "ROLE" ("ID") ON DELETE CASCADE
);

INSERT INTO "ROLE" ("NAME")
VALUES
('ADMIN'),
('USER');

-- Refresh token table
CREATE TABLE "REFRESH_TOKEN" (
    "ID"         BIGSERIAL    NOT NULL,
    "UUID"       UUID         NOT NULL,
    "TOKEN"      TEXT         NOT NULL,
    "USER_ID"    BIGINT       NOT NULL,
    "CREATED_AT" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    "UPDATED_AT" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT "CH_REFRESH_TOKEN" CHECK (("ID" > 0)),
    CONSTRAINT "PK_REFRESH_TOKEN" PRIMARY KEY ("ID"),
    CONSTRAINT "UQ_REFRESH_TOKEN__UUID" UNIQUE ("UUID"),
    CONSTRAINT "UQ_REFRESH_TOKEN__TOKEN" UNIQUE ("TOKEN"),
    CONSTRAINT "FK_CONFIG__USER_ID" FOREIGN KEY ("USER_ID") REFERENCES "USER" ("ID") ON DELETE CASCADE
);

-- Config table
CREATE TABLE "CONFIG" (
    "ID"         BIGSERIAL    NOT NULL,
    "UUID"       UUID         NOT NULL,
    "NAME"       VARCHAR(255) NOT NULL,
    "USER_ID"    BIGINT       NOT NULL,
    "DELETED"    BOOLEAN      NOT NULL,
    "CREATED_AT" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    "UPDATED_AT" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    "DELETED_AT" TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT "CH_CONFIG" CHECK (("ID" > 0)),
    CONSTRAINT "PK_CONFIG" PRIMARY KEY ("ID"),
    CONSTRAINT "UQ_CONFIG__UUID" UNIQUE ("UUID"),
    CONSTRAINT "FK_CONFIG__USER_ID" FOREIGN KEY ("USER_ID") REFERENCES "USER" ("ID") ON DELETE CASCADE
);

CREATE UNIQUE INDEX "UX_CONFIG__USER_ID_NAME"
ON "CONFIG" ("USER_ID", "NAME")
WHERE "DELETED" = false;

-- Subscription Plan table
CREATE TABLE "SUBSCRIPTION_PLAN" (
    "ID"               BIGSERIAL       NOT NULL,
    "NAME"             VARCHAR(255) NOT NULL,
    "MAX_CONFIG_COUNT" BIGINT       NOT NULL,
    CONSTRAINT "CH_SUBSCRIPTION_PLAN" CHECK (("ID" > 0)),
    CONSTRAINT "PK_SUBSCRIPTION_PLAN" PRIMARY KEY ("ID"),
    CONSTRAINT "UQ_SUBSCRIPTION_PLAN__NAME" UNIQUE ("NAME")
);

INSERT INTO "SUBSCRIPTION_PLAN" ("NAME", "MAX_CONFIG_COUNT")
VALUES
  ('Free', 1),
  ('Standard', 5),
  ('Premium', 50);
